@model HRMmanagement.Models.LeaveRequest

@{
    ViewData["Title"] = "Tạo Yêu Cầu Nghỉ Phép";
}

<style>
    body {
        background: rgba(0, 0, 0, 0) url(../img/header.jpg) repeat fixed center 0 / cover;
        color: #ffffff;
        font-family: Arial, sans-serif;
    }

    .container {
        background: rgba(0, 0, 0, 0.7);
        padding: 30px;
        border-radius: 10px;
        max-width: 1200px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    }

    h1, h4 {
        color: #ffa500;
        text-align: center;
        text-transform: uppercase;
    }

    hr {
        border-color: #ffa500;
        margin: 20px 0;
    }

    .alert-success {
        background-color: #ffa500;
        color: #000000;
        border: none;
        border-radius: 5px;
        margin-bottom: 20px;
        text-align: center;
    }

    .alert-danger {
        background-color: #ffffff;
        color: #000000;
        border: none;
        border-radius: 5px;
        margin-bottom: 20px;
        text-align: center;
    }

    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            color: #ffa500;
            font-weight: bold;
            font-size: 1.1em;
            display: block;
            margin-bottom: 10px;
        }

    video, canvas {
        border: 2px solid #ffa500;
        border-radius: 5px;
        background-color: #000000;
        width: 100%;
        max-width: 400px;
        margin: 0 auto;
        display: block;
    }

    .form-control {
        background-color: #ffffff;
        color: #000000;
        border: 1px solid #ffa500;
        border-radius: 5px;
        padding: 10px;
    }

        .form-control:focus {
            border-color: #ffa500;
            box-shadow: 0 0 5px rgba(255, 165, 0, 0.5);
        }

    .text-danger {
        color: #ffffff !important;
    }

    .btn-custom {
        background-color: #ffa500;
        color: #000000;
        border: none;
        padding: 10px 20px;
        font-size: 1.1em;
        border-radius: 5px;
        transition: background-color 0.3s;
        margin: 5px;
    }

        .btn-custom:hover {
            background-color: #ffffff;
            color: #000000;
        }

    .btn-secondary {
        background-color: #ffffff;
        color: #000000;
    }

        .btn-secondary:hover {
            background-color: #ffa500;
            color: #000000;
        }

    #result {
        background: rgba(255, 255, 255, 0.1);
        padding: 15px;
        border-radius: 5px;
        border: 1px solid #ffa500;
        color: #ffffff;
        text-align: center;
    }

    #scanResult {
        color: #ffa500;
        font-weight: bold;
        font-size: 1.2em;
    }
</style>

<div class="container">
    <h1>Tạo Yêu Cầu Nghỉ Phép - Xưởng Giày Thành Công</h1>
    <h4>Quét Mã QR hoặc Nhập Thủ Công</h4>
    <hr />

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label>Hình Ảnh Từ Webcam</label>
                <video id="webcam" autoplay playsinline></video>
                <canvas id="canvas" style="display:none;"></canvas>
            </div>
            <div class="form-group text-center">
                <button id="startScan" class="btn btn-custom">Bắt Đầu Quét</button>
                <button id="stopScan" class="btn btn-custom btn-secondary" disabled>Dừng Quét</button>
            </div>
            <div id="result" class="form-group">
                <label>Kết Quả Quét:</label>
                <p id="scanResult">Đang chờ quét...</p>
            </div>
        </div>
        <div class="col-md-6">
            <form id="leaveRequestForm" asp-action="Create" method="post">
                @Html.AntiForgeryToken()
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="EmployeeId" class="control-label">Mã Nhân Viên</label>
                    <input asp-for="EmployeeId" class="form-control" id="employeeId" readonly />
                    <span asp-validation-for="EmployeeId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="LeaveType" class="control-label">Loại Nghỉ Phép</label>
                    <input asp-for="LeaveType" class="form-control" />
                    <span asp-validation-for="LeaveType" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="StartDate" class="control-label">Ngày Bắt Đầu</label>
                    <input asp-for="StartDate" class="form-control" type="date" min="@DateTime.Today.ToString("yyyy-MM-dd")" />
                    <span asp-validation-for="StartDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="EndDate" class="control-label">Ngày Kết Thúc</label>
                    <input asp-for="EndDate" class="form-control" type="date" min="@DateTime.Today.ToString("yyyy-MM-dd")" />
                    <span asp-validation-for="EndDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Reason" class="control-label">Lý Do</label>
                    <input asp-for="Reason" class="form-control" />
                    <span asp-validation-for="Reason" class="text-danger"></span>
                </div>
                <div class="form-group" hidden>
                    <label asp-for="Status" class="control-label">Trạng Thái</label>
                    <input asp-for="Status" class="form-control" value="Chưa xem" />
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
                <div class="form-group text-center">
                    <input type="submit" value="Gửi Yêu Cầu Nghỉ Phép" class="btn btn-custom" id="submitLeaveRequest" disabled />
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.jsdelivr.net/npm/jsqr@1.4.0/dist/jsQR.min.js"></script>
    <script>
        const video = document.getElementById("webcam");
        const canvas = document.getElementById("canvas");
        const ctx = canvas.getContext("2d");
        const startScanBtn = document.getElementById("startScan");
        const stopScanBtn = document.getElementById("stopScan");
        const scanResult = document.getElementById("scanResult");
        const employeeIdInput = document.getElementById("employeeId");
        const submitLeaveRequestBtn = document.getElementById("submitLeaveRequest");
        let stream = null;
        let isScanning = false;

        startScanBtn.addEventListener("click", async () => {
            try {
                stream = await navigator.mediaDevices.getUserMedia({
                    video: { facingMode: { ideal: "environment" } }
                });
                video.srcObject = stream;
                video.onloadedmetadata = () => {
                    video.play();
                    startScanBtn.disabled = true;
                    stopScanBtn.disabled = false;
                    isScanning = true;
                    scanQRCode();
                };
            } catch (err) {
                scanResult.textContent = `Lỗi truy cập webcam: ${err.message}`;
                console.error(err);
            }
        });

        stopScanBtn.addEventListener("click", () => {
            if (stream) {
                stream.getTracks().forEach(track => track.stop());
                stream = null;
            }
            video.srcObject = null;
            startScanBtn.disabled = false;
            stopScanBtn.disabled = true;
            scanResult.textContent = "Đang chờ quét...";
            submitLeaveRequestBtn.disabled = true;
            employeeIdInput.value = "";
            isScanning = false;
        });

        function scanQRCode() {
            if (!isScanning || !video.srcObject) {
                return;
            }

            if (video.videoWidth === 0 || video.videoHeight === 0) {
                requestAnimationFrame(scanQRCode);
                return;
            }

            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);

            try {
                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
                const code = jsQR(imageData.data, imageData.width, imageData.height);
                if (code && code.data) {
                    const match = code.data.match(/EmployeeID:\s*(\d+)/);
                    if (match && match[1]) {
                        const employeeId = match[1];
                        scanResult.textContent = `Mã Nhân Viên: ${employeeId}`;
                        employeeIdInput.value = employeeId;
                        submitLeaveRequestBtn.disabled = false;
                    } else {
                        scanResult.textContent = "Định dạng mã QR không hợp lệ.";
                    }
                }
            } catch (err) {
                scanResult.textContent = `Lỗi quét mã QR: ${err.message}`;
                console.error(err);
            }

            requestAnimationFrame(scanQRCode);
        }

        document.getElementById("leaveRequestForm").addEventListener("submit", (e) => {
            if (!confirm("Xác nhận gửi yêu cầu nghỉ phép cho Mã Nhân Viên: " + employeeIdInput.value + "?")) {
                e.preventDefault();
            }
        });
    </script>
}